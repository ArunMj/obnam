#!/bin/sh
#
# test_odirect_read -- run tests on odirect_read
#
# Copyright (C) 2006  Lars Wirzenius <liw@iki.fi>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.


die()
{
    echo "$@" 1>&2
    echo "Exit code: $exit_code" 1>&2
    echo "Stderr contents:" 1>&2
    sed 's/.*/  &/' "$stderr_file" 1>&2
    exit 1
}

run()
{
    "$@" 2>"$stderr_file"
    exit_code=$?
}

require_exit_code()
{
    if [ "$exit_code" != $1 ]
    then
        die "Program did not exit with code $1"
    fi
}

require_stderr_match()
{
    if ! grep "$1" "$stderr_file" > /dev/null
    then
        die "Stderr does not match '$1'"
    fi
}

stderr_file=$(mktemp)

# Check no arguments
run ./odirect_read
require_exit_code 1
require_stderr_match "exactly one argument"

# Check too many arguments
run ./odirect_read foo bar
require_exit_code 1
require_stderr_match "exactly one argument"

# Check non-existing file
run ./odirect_read nonexisting
require_exit_code 1
require_stderr_match "Trying to open"

# Check writing problems
run ./odirect_read README > /dev/full
require_exit_code 1
require_stderr_match "Writing to stdout"

# Check existing normal file, this should succeed
run ./odirect_read README > /dev/null
require_exit_code 0

# Cleanup
rm -f "$stderr_file"
