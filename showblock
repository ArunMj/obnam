#!/usr/bin/python


"""Show the contents of a Wibbr storage block."""


import sys

import wibbrlib


def format_objmap(data):
    uuids = []
    while data:
        uuids.append(data[:36])
        data = data[36:]
    return "%s -> %s" % (uuids[0], ",".join(uuids[1:]))


def format_octal(data):
    return "0%o" % wibbrlib.varint.decode(data, 0)[0]


def format_decimal(data):
    return "%d" % wibbrlib.varint.decode(data, 0)[0]
    

component_data_formatters = {
    wibbrlib.cmp.CMP_OBJTYPE: 
        lambda data: \
            wibbrlib.obj.type_name(wibbrlib.varint.decode(data, 0)[0]),
    wibbrlib.cmp.CMP_ST_MODE: format_octal,
    wibbrlib.cmp.CMP_ST_INO: format_decimal,
    wibbrlib.cmp.CMP_ST_DEV: format_decimal,
    wibbrlib.cmp.CMP_ST_NLINK: format_decimal,
    wibbrlib.cmp.CMP_ST_UID: format_decimal,
    wibbrlib.cmp.CMP_ST_GID: format_decimal,
    wibbrlib.cmp.CMP_ST_SIZE: format_decimal,
    wibbrlib.cmp.CMP_ST_ATIME: format_decimal,
    wibbrlib.cmp.CMP_ST_CTIME: format_decimal,
    wibbrlib.cmp.CMP_ST_MTIME: format_decimal,
    wibbrlib.cmp.CMP_ST_BLOCKS: format_decimal,
    wibbrlib.cmp.CMP_ST_BLKSIZE: format_decimal,
    wibbrlib.cmp.CMP_ST_RDEV: format_decimal,
    wibbrlib.cmp.CMP_OBJMAP: format_objmap,
}


def show_component(component, indent=0):
    x = " " * (indent * 2)
    type = wibbrlib.cmp.get_type(component)
    print x + "Component:", type, wibbrlib.cmp.type_name(type)
    if wibbrlib.cmp.is_composite(component):
        for c in wibbrlib.cmp.get_subcomponents(component):
            show_component(c, indent+1)
    else:
        fmt = component_data_formatters.get(type, repr)
        print x + "  data:", fmt(wibbrlib.cmp.get_string_value(component))


def show_block(filename):
    print "======== block:", filename, "==========="
    f = file(filename, "r")
    str = f.read()
    f.close()
    pos = 0
    for c in wibbrlib.obj.block_decode(str):
        show_component(c)
        print


def main():
    for filename in sys.argv[1:]:
        show_block(filename)


if __name__ == "__main__":
    main()
