#!/bin/sh
#
# check that obnamfs.py works
#
# Copyright (C) 2007  Lars Wirzenius <liw@iki.fi>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

die()
{
    echo "$@" 1>&2
    exit 1
}

# mtime for file/dir in same format as "obnam --generation-times" outputs
file_mtime()
{
    TZ=GMT stat -c %y "$1" | sed 's/\..*//' | tr -d ' '
}

# mtime for a generation (last timestamp)
gen_mtime()
{
    ./cli.py --store="$store" --generation-times generations |
    sed -n "/$1/s/.* -- //p" |
    tr -d ' '
}

set -e
echo "Testing obnamfs. You may need to clean up manually if something fails"

# Setup stuff.
store=$(mktemp -d)
mount=$(mktemp -d)

echo "Store: $store"
echo "Mount point: $mount"

# Create a backup.
echo "Creating backup."
./cli.py --store="$store" backup obnam

# Mount it.
echo "Mounting."
./obnamfs.py --store="$store" "$mount" &

while ! mount | grep " $mount " > /dev/null
do
    sleep 1
done

# Check that the uid, gid, and permissions of the root are correct.
[ $(stat -c %u "$mount/.") = $(id -u) ] || die "UID is wrong"
[ $(stat -c %g "$mount/.") = $(id -g) ] || die "GID is wrong"
[ $(stat -c %a "$mount/.") = 700 ] || die "permissions are wrong"

# Check that there is a sub-directory named after each generation.
for gen in $(./cli.py --store="$store" generations)
do
    [ -d "$mount/$gen" ] || die "Generation $gen not listed"
    [ $(file_mtime "$mount/$gen") = $(gen_mtime "$gen") ] || \
        die "Generation $gen mtime is wrong"
done

# Unmount it.
echo "Unmounting."
fusermount -u "$mount"

# Clean up.
echo "Cleaning up store and mount point."
rm -rf "$store"
rmdir "$mount"

# Done.
echo "Done, all OK and cleaned up."
exit 0
