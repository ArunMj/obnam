#!/usr/bin/env python
# Copyright 2010-2015  Lars Wirzenius
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


import sys
import time

import cliapp

import obnamlib


def measure(n, func):
    start = time.clock()
    for i in range(n):
        func()
    end = time.clock()
    return end - start


class MicroBenchmark(cliapp.Application):

    def process_args(self, args):
        n = int(args[0])
        obj = {
            'foo': 'bar',
            'big': 'x' * 1024**2,
            'dict': {
                'foo': 'yo',
                'long': ['x'] * 1024**2,
            }
        }

        encoded = obnamlib.serialise_object(obj)

        calibrate = measure(n, lambda: None)
        encode = measure(n, lambda: obnamlib.serialise_object(obj))
        decode = measure(n, lambda: obnamlib.deserialise_object(encoded))
        print 'encode: %.1f/s' % (n/(encode - calibrate))
        print 'decode: %.1f/s' % (n/(decode - calibrate))


if __name__ == '__main__':
    MicroBenchmark().run()
