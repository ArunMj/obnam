#!/usr/bin/python
# Copyright (C) 2008  Lars Wirzenius <liw@liw.fi>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

import sys
import obnamlib


hide_value_of = set([obnamlib.FILECHUNK])


def dump_component(cmp, indent):
    spaces = " " * (indent * 2)
    kind = obnamlib.cmp_kinds.nameof(cmp.kind)
    if obnamlib.cmp_kinds.is_composite(cmp.kind):
        print "%s%s:" % (spaces, kind)
        for child in cmp.children:
            dump_component(child, indent+1)
    elif cmp.kind in hide_value_of:
        print "%s%s: (hidden)" % (spaces, kind)
    else:
        print "%s%s: %s" % (spaces, kind, repr(cmp.string))


def dump(obj):
    print "%s (%s):" % (obnamlib.obj_kinds.nameof(obj.kind), obj.id)
    obj.prepare_for_encoding()
    for c in obj.components:
        dump_component(c, 1)


def main():
    bf = obnamlib.BlockFactory()
    for filename in sys.argv[1:]:
        encoded = file(filename).read()
        block_id, objs, mappings = bf.decode_block(encoded)

        print "filename:", filename
        print "block_id:", block_id
        for obj in objs:
            dump(obj)
        for objid, blkid in mappings.iteritems():
            print "MAP:", objid, "->", blkid
        print

if __name__ == "__main__":
    main()
